## To reduce to a subdir:

git filter-branch -f --tree-filter 'mv pkg/* pkg/the-package' -- --all

git filter-branch -f --subdirectory-filter pkg/* -- --all


## remove unwanted files from history


git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch *~ */*~ */*/*~ */*/*/*~' -- --all

git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch .DS_Store */.DS_Store */*.DS_Store' -- --all

git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch doc/*.{aux,bak,bbl,blg,brf,css,dtd,dvi,html,idx,ilg,ind,js,lab,log,out,pnr,ps,six,toc,txt} doc/htm/* htm/* doc/manual.pdf' -- --all

# delete doc/*.tex files generated by GAPDoc
git filter-branch -f --tree-filter 'fgrep -l "generated by GAPDoc2LaTeX from XML source" doc/*.tex | xargs rm -f' -- --all

git log --stat


## to rename a misnamed file or dir

git filter-branch -f --tree-filter 'mv foobar doc || true' -- --all

## fix file permissions

git filter-branch -f --tree-filter 'find -E . -type f -regex ".*\.(xml|g|gz|gd|gi|gap|tst|html|gif|png|jpg|eps|bmp|css|c|pdf|txt|fig|HAP)" | xargs chmod a-x' -- --all



## Remove CVS leftovers

find . -type f | fgrep -v .git | xargs sed -i -e '/\$Id/d'
git commit -a -m "Remove CVS leftovers" 

## change line endings

git filter-branch -f --tree-filter 'find . -type f | xargs dos2unix' -- --all

## update commit dates based on commit message

Works for commit messages of the form

  Version 1.1, 22/06/2004

```
git filter-branch -f --env-filter '
    # extract relevant part of commit message
    msg="$(fgrep Version ../commit)"
    regex="^Version [0-9]+(\.[0-9]+)+, [0-9]+/[0-9]+/[0-9]+$"
    if [[ "$msg" =~ $regex ]] ; then
      iso_date=$(echo "$msg" | sed -E -e "s;Version [0-9]+(\.[0-9]+)+, ([0-9]+)/([0-9]+)/([0-9]+);\4-\3-\2;")
      GIT_AUTHOR_DATE="${iso_date} 12:00:00 +0000"
      GIT_COMMITTER_DATE="${iso_date}T12:00:00 +0000"
    fi
    #GIT_AUTHOR_NAME="gap"
    #GIT_AUTHOR_EMAIL="gap@gap-system.org"
    #GIT_COMMITTER_NAME="gap"
    #GIT_COMMITTER_EMAIL="gap@gap-system.org"
' -- --all

git log --pretty=fuller
```




## To change tags from `Version-2.0.1` to `v2.0.1`:

  for t in $(git tag | fgrep Version-) ; do
    v=${t#Version-}
    echo "Change $t to v$v"
    git tag v$v $t
    git tag -d $t
  done

  git push --tags --prune

## alternatively: regenerate version tags
for commit in $(git rev-list master)
do
    msg=$(git cat-file commit $commit | tail -1)
    regex="^Version [0-9]+(\.[0-9]+)+, [0-9]+/[0-9]+/[0-9]+$"
    if [[ "$msg" =~ $regex ]] ; then
      ver=$(echo "$msg" | sed -E -e "s;Version ([0-9]+(\.[0-9]+)+), ([0-9]+)/([0-9]+)/([0-9]+);\1;")
      git tag -f v$ver $commit
    fi
done
